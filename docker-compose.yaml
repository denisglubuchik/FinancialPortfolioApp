services:
  api_gateway:
    container_name: api_gateway
    build:
      context: .
      dockerfile: docker/api_gateway/Dockerfile
    ports:
      - "7777:7777"
    networks:
      - app_network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    ports:
      - "5672:5672"
    networks:
      - app_network

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6380:6379"
    networks:
      - app_network

  portfolio_db:
    container_name: portfolio_postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "portfolio_app"
      POSTGRES_USER: "sqluser"
      POSTGRES_PASSWORD: "sqlpass"
    ports:
      - "5440:5432"
    networks:
      - app_network

  portfolio_app:
    container_name: portfolio_app
    build:
      context: .
      dockerfile: docker/portfolio_service/Dockerfile
    env_file:
      - .env-docker
    command: ["back/portfolio_service/app.sh"]
#    command: sh -c "cd /back/portfolio_service && alembic upgrade head && cd ../../ && gunicorn back.portfolio_service.portfolio_main:portfolio_app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - portfolio_db
      - rabbitmq
      - api_gateway
    networks:
      - app_network

  user_db:
    container_name: user_postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "user_app"
      POSTGRES_USER: "sqluser"
      POSTGRES_PASSWORD: "sqlpass"
    ports:
      - "5441:5432"
    networks:
      - app_network

  user_app:
    container_name: user_app
    build:
      context: .
      dockerfile: docker/user_service/Dockerfile
    env_file:
      - .env-docker
    command: [ "back/user_service/app.sh" ]
    #    command: sh -c "cd /back/user_service && alembic upgrade head && cd ../../ && gunicorn back.user_service.user_main:user_app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8001"
    ports:
      - "8001:8001"
    depends_on:
      - user_db
      - rabbitmq
      - api_gateway
    networks:
      - app_network

  notification_db:
    container_name: notification_postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "notification_app"
      POSTGRES_USER: "sqluser"
      POSTGRES_PASSWORD: "sqlpass"
    ports:
      - "5442:5432"
    networks:
      - app_network

  notification_app:
    container_name: notification_app
    build:
      context: .
      dockerfile: docker/notification_service/Dockerfile
    env_file:
      - .env-docker
    command: [ "back/notification_service/app.sh" ]
    #    command: sh -c "cd /back/notification_service && alembic upgrade head && cd ../../ && faststream run back.notification_service.notification_main:notification_app --workers 4"
    ports:
      - "8002:8002"
    depends_on:
      - notification_db
      - rabbitmq
    networks:
      - app_network

  market_data_app:
    container_name: market_data_app
    build:
      context: .
      dockerfile: docker/market_data_service/Dockerfile
    env_file:
      - .env-docker
    ports:
      - "8003:8003"
    depends_on:
      - redis
    networks:
      - app_network

  bot:
    container_name: tg_bot
    build:
      context: .
      dockerfile: docker/bot/Dockerfile
    env_file:
      - .env-bot
    depends_on:
      - redis
    networks:
      - app_network

networks:
  app_network: