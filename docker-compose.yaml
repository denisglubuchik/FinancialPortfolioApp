version: "3.9"
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    ports:
      - "5672:5672"
    networks:
      default1:
        ipv4_address: 192.168.0.200
  portfolio_db:
    container_name: portfolio_postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "portfolio_app"
      POSTGRES_USER: "sqluser"
      POSTGRES_PASSWORD: "sqlpass"
    ports:
      - "5432:5432"
    networks:
      default1:
        ipv4_address: 192.168.0.100

  portfolio_app:
    container_name: portfolio_app
    build:
      context: .
      dockerfile: docker/portfolio_service/Dockerfile
    env_file:
      - .env-docker
    command: ["back/portfolio_service/app.sh"]
#    command: sh -c "cd /back/portfolio_service && alembic upgrade head && cd ../../ && gunicorn back.portfolio_service.portfolio_main:portfolio_app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      - portfolio_db
      - rabbitmq
    networks:
      default1:
        ipv4_address: 192.168.0.10

  user_db:
    container_name: user_postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "user_app"
      POSTGRES_USER: "sqluser"
      POSTGRES_PASSWORD: "sqlpass"
    ports:
      - "5433:5432"
    networks:
      default1:
        ipv4_address: 192.168.0.101

  user_app:
    container_name: user_app
    build:
      context: .
      dockerfile: docker/user_service/Dockerfile
    env_file:
      - .env-docker
    command: [ "back/user_service/app.sh" ]
    #    command: sh -c "cd /back/user_service && alembic upgrade head && cd ../../ && gunicorn back.user_service.user_main:user_app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8001"
    ports:
      - "8001:8001"
    depends_on:
      - user_db
      - rabbitmq
    networks:
      default1:
        ipv4_address: 192.168.0.11

  notification_db:
    container_name: notification_postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: "notification_app"
      POSTGRES_USER: "sqluser"
      POSTGRES_PASSWORD: "sqlpass"
    ports:
      - "5434:5432"
    networks:
      default1:
        ipv4_address: 192.168.0.102

  notification_app:
    container_name: notification_app
    build:
      context: .
      dockerfile: docker/notification_service/Dockerfile
    env_file:
      - .env-docker
    command: [ "back/notification_service/app.sh" ]
    #    command: sh -c "cd /back/notification_service && alembic upgrade head && cd ../../ && faststream run back.notification_service.notification_main:notification_app --workers 4"
    ports:
      - "8002:8002"
    depends_on:
      - notification_db
      - rabbitmq
    networks:
      default1:
        ipv4_address: 192.168.0.12

networks:
  default1:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24