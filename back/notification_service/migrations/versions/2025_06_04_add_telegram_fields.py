"""Add telegram_id and delivery_status fields

Revision ID: 2025_06_04_add_telegram_fields
Revises: e41828ae588e
Create Date: 2025-06-04 12:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2025_06_04_add_telegram_fields'
down_revision: Union[str, None] = 'e41828ae588e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add telegram_id to users table
    op.add_column('users', sa.Column('telegram_id', sa.BigInteger(), nullable=True))
    op.create_unique_constraint('uq_users_telegram_id', 'users', ['telegram_id'])
    
    # Add delivery fields to notifications table
    op.add_column('notifications', sa.Column('delivery_status', sa.String(), nullable=False, server_default='pending'))
    op.add_column('notifications', sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('notifications', sa.Column('retry_count', sa.Integer(), nullable=False, server_default='0'))
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remove delivery fields from notifications table
    op.drop_column('notifications', 'retry_count')
    op.drop_column('notifications', 'sent_at') 
    op.drop_column('notifications', 'delivery_status')
    
    # Remove telegram_id from users table
    op.drop_constraint('uq_users_telegram_id', 'users', type_='unique')
    op.drop_column('users', 'telegram_id')
    
    # ### end Alembic commands ### 